---
global:
  domain: argocd.knas.home.fossar.net

configs:
  cm:
    statusbadge.enabled: true
    timeout.reconciliation: 600s
  params:
    server.disable.auth: true
  cmp:
    create: true
    plugins:
      custom-jsonnet:
        parameters:
          static:
            - name: values
              title: values to pass as input parameters (values.json)
              tooltip: A file named values.json will be generated from this parameter before generating manifests
              required: true
              type: string
        init:
          command: ["/usr/bin/bash", "-c"]
          args:
            - |
              jb update
        generate:
          command: ["/usr/bin/bash", "-c"]
          args:
            - |
              echo "${ARGOCD_APP_PARAMETERS}" > /tmp/parameters.log
              echo "${ARGOCD_APP_PARAMETERS}" | jq -r '.[] | select(.name == "values") | .string' > values.yaml
              find . -name '*.jsonnet' | while read -r file; do
                jsonnet -J vendor -J . $file
              done

repoServer:
  extraContainers:
    - name: cmp-custom-jsonnet
      command:
        - "/var/run/argocd/argocd-cmp-server"
      image: docker.io/nmaupu/argocd-cmp-jsonnet:0.20.0
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        # Remove this volumeMount if you've chosen to bake the config file into the sidecar image.
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: custom-jsonnet.yaml
          name: argocd-cmp-cm
        # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps
        # mitigate path traversal attacks.
        - mountPath: /tmp
          name: cmp-tmp
  volumes:
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm
    - name: cmp-tmp
      emptyDir: {}

server:
  certificate:
    enabled: true
    domain: argocd.knas.home.fossar.net
    issuer:
      kind: ClusterIssuer
      name: google-dns-issuer-prod
  ingress:
    enabled: true
    tls: true
    annotations:
      traefik.ingress.kubernetes.io/router.entrypoints: websecure
      traefik.ingress.kubernetes.io/router.tls: "true"
    hostname: argocd.knas.home.fossar.net
