---
TZ: Europe/Paris

# Add any image: yaml key is the name used in any imageSelector
initImage:
  repository: nmaupu/hass-init
  tag: 1.0.2
  pullPolicy: IfNotPresent

#####
# conf reloader custom cronjob configuration
confReloaderImage:
  repository: nmaupu/hass-conf-reloader
  tag: 1.0.1
  pullPolicy: IfNotPresent

serviceAccount:
  conf-reloader:
    enabled: true
    primary: true
    targetSelector:
      - conf-reloader

rbac:
  conf-reloader:
    enabled: true
    primary: true
    serviceAccounts:
      - conf-reloader
    rules:
      - apiGroups: ["apps"]
        resources: ["deployments"]
        verbs: ["get", "list", "watch", "patch", "update"]
    subjects: []

podOptions:
  automountServiceAccountToken: true

workload:
  # conf-reloader cronjob gets config from upstream, prepares the directory
  # zips it and pushes it as a configmap ready to be mounted by the main container.
  conf-reloader:
    enabled: true
    type: CronJob
    schedule: "* * * * *"
    podSpec:
      containers:
        main:
          enabled: true
          primary: true
          serviceAccountName: conf-reloader
          env:
            NAMESPACE:
              fieldRef:
                fieldPath: metadata.namespace
          probes:
            liveness:
              enabled: false
            readiness:
              enabled: false
            startup:
              enabled: false
          imageSelector: confReloaderImage
          command:
            - bash
            - -c
            - |
              set -eEuo pipefail
              set -x
              date

              config="/conf-reloader/hass-config/configuration.yaml"
              config_dir="/conf-reloader/hass-config"

              if [ -d "$config_dir/.git" ]; then
                # Directory already initialized, pulling
                cd /conf-reloader/hass-config
                git fetch --all && git reset --hard origin/master
              else
                # Cloning
                cd /conf-reloader
                git clone https://github.com/nmaupu/hass-config.git
              fi

              cp /hass-secrets/secret.yaml "$config_dir/secrets.yaml"
              mkdir -p $config_dir/.storage
              cp /config/init/onboarding "$config_dir/.storage/onboarding"
              cp /hass-passwords/hass-passwords.json "$config_dir/.storage/auth_provider.homeassistant"

              # handling recorder configuration (db)
              grep -v '^recorder:' "$config_dir/configuration.yaml" > /tmp/configuration.yaml
              cp /tmp/configuration.yaml "$config_dir/configuration.yaml"
              echo "" >> "$config_dir/configuration.yaml"
              cat << EOF >> "$config_dir/configuration.yaml"
              recorder:
                purge_keep_days: 30
                commit_interval: 3
                db_url: {{ (printf "%s?client_encoding=utf8" (.Values.cnpg.main.creds.std | trimAll "\"")) | quote }}
              EOF

              # MQTT must be configured in the UI now...

              if [ ! -d "$config_dir/www" ]; then
                mkdir -p $config_dir/www/{icons/weather_icons,community/lovelace-meteofrance-weather-card/icons}
                git -c advice.detachedHead=false clone --depth=1 --branch=1.12.1 https://github.com/thomasloven/lovelace-auto-entities.git "$config_dir/www/auto-entities"
                git -c advice.detachedHead=false clone --depth=1 --branch=1.3.2 https://github.com/thomasloven/lovelace-template-entity-row "$config_dir/www/template-entity-row"
                (
                  git -c advice.detachedHead=false clone --depth=1 https://github.com/rodrigofragadf/lovelace-cards.git "$config_dir/www/lovelace-cards" && \
                    cd "$config_dir/www/lovelace-cards" && \
                    git -c advice.detachedHead=false reset --hard c246a4f
                )
                git -c advice.detachedHead=false clone --depth=1 --branch=2.4.4 https://github.com/thomasloven/lovelace-layout-card.git "$config_dir/www/lovelace-layout-cards"

                curl -L https://github.com/maykar/custom-header/releases/download/1.3.2/custom-header.js \
                  -o "$config_dir/www/custom-header.js"
                curl -L https://github.com/kalkih/mini-graph-card/releases/download/v0.9.2/mini-graph-card-bundle.js \
                  -o "$config_dir/www/mini-graph-card-bundle.js"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/meteofrance-weather-card.js \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/meteofrance-weather-card.js"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/meteofrance-weather-card-editor.js \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/meteofrance-weather-card-editor.js"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/cloudy-day-3.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/cloudy-day-3.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/cloudy-night-3.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/cloudy-night-3.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/cloudy.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/cloudy.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/day.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/day.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/fog.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/fog.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/lightning-rainy.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/lightning-rainy.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/night.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/night.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/rainy-5.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/rainy-5.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/rainy-6.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/rainy-6.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/rainy-7.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/rainy-7.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/snowy-6.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/snowy-6.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/snowy-rainy.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/snowy-rainy.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/thunder.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/thunder.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/windy-night.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/windy-night.svg"
                curl -L https://raw.githubusercontent.com/hacf-fr/lovelace-meteofrance-weather-card/Meteo-France/dist/icons/windy.svg \
                  -o "$config_dir/www/community/lovelace-meteofrance-weather-card/icons/windy.svg"
                curl -L -o /tmp/amcharts.zip https://download.amcharts.com/1.0/amcharts_weather_icons_1.0.0.zip && \
                  unzip /tmp/amcharts.zip -d "$config_dir/www/icons/weather_icons" && \
                  rm -f /tmp/amcharts.zip
              fi

              sha1=$(find "$config_dir" -type f | grep -v www | grep -v .git | sort | while read -r file; do cat $file; done | sha1sum | awk '{print $1}')
              echo "$sha1"
              # Patching main deployment with a new annotation if different
              kubectl patch deployment home-assistant -n $NAMESPACE \
                --patch "{\"spec\": {\"template\": {\"metadata\": {\"annotations\": {\"conf-reloader-hass-config-sha1\": \"$sha1\"}}}}}"


# conf reloader custom cronjob configuration end
#####

  main:
    podSpec:
      initContainers:
        init:
          enabled: true
          type: init
          imageSelector: initImage
          command:
            - bash
            - /config/init/init.sh

securityContext:
  container:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0
    capabilities:
      add:
        - CAP_NET_RAW
        - CAP_NET_BIND_SERVICE

cnpg:
  main:
    enabled: true
    user: home-assistant
    database: home-assistant
    cluster:
      instances: 1
      singleNode: true
      storage:
        size: 50Gi
      walStorage:
        size: 50Gi

persistence:
  init:
    enabled: true
    type: configmap
    objectName: init
    mountPath: "/config/init"
    defaultMode: "0777"
    readOnly: true
    targetSelectAll: true
  conf-reloader:
    enabled: true
    type: pvc
    mountPath: /conf-reloader
    targetSelectAll: true
    storageClass: openebs-hostpath
    size: 200Mi
  config:
    enabled: true
    type: pvc
    mountPath: /config
    targetSelectAll: true
    storageClass: openebs-hostpath
    size: 200Mi
  hass-secrets:
    # Existing secret (sealed-secrets) created under ../../statics
    enabled: true
    type: secret
    objectName: hass-secrets
    mountPath: /hass-secrets
    expandObjectName: false
    targetSelectAll: true
    items:
      - key: secret.yaml
        path: secret.yaml
  hass-passwords:
    # Existing secret (sealed-secrets) created under ../../statics
    enabled: true
    type: secret
    objectName: hass-passwords
    mountPath: /hass-passwords
    expandObjectName: false
    targetSelectAll: true
    items:
      - key: hass-passwords.json
        path: hass-passwords.json

service:
  main:
    type: LoadBalancer
    loadBalancerIP: 192.168.100.20
    ports:
      main:
        port: 8123
        targetPort: 8123

ingress:
  main:
    enabled: true
    hosts:
      - host: hass.home.fossar.net
        paths:
          - path: /
            pathType: Prefix
      - host: hass.iot.home.fossar.net
        paths:
          - path: /
            pathType: Prefix
    integrations:
      certManager:
        certificateIssuer: google-dns-issuer-prod
        enabled: true
      traefik:
        enabled: true
        allowCors: false
        entrypoints:
          - websecure
        enableFixedMiddlewares: false

configmap:
  init:
    enabled: true
    data:
      onboarding: |-
        {
          "data": {
            "done": [
              "user",
              "core_config",
              "integration"
            ]
          },
          "key": "onboarding",
          "version": 3
        }
      init.sh: |-
        set -eEuo pipefail
        set -x
        date

        conf_reloader_dir=/conf-reloader/hass-config
        config_dir=/config
        config="${config_dir}/configuration.yaml"

        # Getting last configuration from conf-reloader
        rsync -aP --delete \
          --exclude .storage/ \
          --exclude .git/ \
          --exclude .HA_VERSION \
          "$conf_reloader_dir/" "$config_dir/" || true
        # .storage is used as a local configuration directory (integrations for example) so be sure to not delete anything in it.
        rsync -aP "$conf_reloader_dir/.storage" "$config_dir" || true
