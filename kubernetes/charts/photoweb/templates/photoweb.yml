---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Release.Name }}

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: {{ .Release.Name }}-pv
spec:
  capacity:
    storage: {{ .Values.nfs.storageSize }}
{{- if .Values.nfs.accessModes }}
  accessModes:
{{ .Values.nfs.accessModes | toYaml | indent 4 }}
{{- end }}
  nfs:
    server: {{ .Values.nfs.server }}
    path: {{ .Values.nfs.mountpoint | quote }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-pvc
  namespace: {{ .Release.Name }}
spec:
  accessModes:
    - ReadOnlyMany
  storageClassName: ""
  resources:
    requests:
      storage: {{ .Values.nfs.storageSize }}

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deploy
  namespace: {{ .Release.Name }}
  labels:
    k8s-app: {{ .Release.Name }}-deploy
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}-deploy
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Release.Name }}-deploy
    spec:
      containers:
      - name: web
        image: {{ .Values.deployment.image }}
        ports:
          - name: web
            containerPort: 80
        volumeMounts:
          - name: storage-volume
            mountPath: "/usr/share/nginx/html"
        resources:
           limits:
             cpu: {{ .Values.resources.limits.cpu }}
             memory: {{ .Values.resources.limits.memory }}
           requests:
             cpu: {{ .Values.resources.requests.cpu }}
             memory: {{ .Values.resources.requests.memory }}
      volumes:
        - name: storage-volume
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-svc
  namespace: {{ .Release.Name }}
  labels:
    k8s-app: {{ .Release.Name }}-svc
    kubernetes.io/name: "{{ .Release.Name }}-svc"
spec:
  selector:
    k8s-app: {{ .Release.Name }}-deploy
  ports:
  - name: web-frontend
    port: 80
    protocol: TCP

{{- if .Values.ingress.enabled }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
  namespace: {{ .Release.Name }}
spec:
  rules:
  - host: {{ .Values.ingress.hostname }}
    http:
      paths:
      - path: /
        backend:
          serviceName: {{ .Release.Name }}-svc
          servicePort: 80
{{- end }}
