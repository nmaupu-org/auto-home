---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vault-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  nfs:
    server: nfs.home.fossar.net
    path: "/mnt/tank/kube-nfs/vault"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault-pvc
  namespace: kube-system
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-configmap
  namespace: kube-system
data:
  config.hcl: |
    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_disable = "true"
    }
    storage "file" {
      path = "/vault/data"
    }
    max_lease_ttl = "12h"
    default_lease_ttl = "12h"

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: vault
  namespace: kube-system
  labels:
    k8s-app: vault
spec:
  selector:
    matchLabels:
      k8s-app: vault
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: vault
    spec:
      containers:
      - name: vault
        image: vault:0.8.3
        imagePullPolicy: Always
        args:
          - server
        ports:
          - name: vault
            containerPort: 8200
        resources:
          limits:
            cpu: 30m
            memory: 150Mi
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        volumeMounts:
          - name: nfs-volume
            mountPath: /vault
          # Necessary to copy config file into nfs share
          # because docker image's endpoint is not reading -config param
          - name: vault-config-volume
            mountPath: /vault/config
      volumes:
        - name: nfs-volume
          persistentVolumeClaim:
            claimName: vault-pvc
        - name: vault-config-volume
          configMap:
            name: vault-configmap

---
apiVersion: v1
kind: Service
metadata:
  name: vault-svc
  namespace: kube-system
  labels:
    k8s-app: vault-svc
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "vault-svc"
spec:
  selector:
    k8s-app: vault
  ports:
  - name: vault-svc
    port: 8200
    protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: vault-ingress
  namespace: kube-system
spec:
  rules:
  - host: vault.home.fossar.net
    http:
      paths:
      - path: /
        backend:
          serviceName: vault-svc
          servicePort: 8200
