---
apiVersion: v1
kind: Namespace
metadata:
  name: photoweb

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: photoweb-nfs
  namespace: photoweb
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadOnlyMany
  nfs:
    server: nfs.home.fossar.net
    path: "/mnt/tank/kube-nfs/photoweb"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: photoweb-nfs
  namespace: photoweb
spec:
  accessModes:
    - ReadOnlyMany
  storageClassName: ""
  resources:
    requests:
      storage: 2Gi

---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: photoweb-front
  namespace: photoweb
  labels:
      k8s-app: photoweb-front
spec:
  selector:
    matchLabels:
        k8s-app: photoweb-front
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: photoweb-front
    spec:
      containers:
      - name: web
        image: nginx:1.13.5
        ports:
          - name: web
            containerPort: 80
        volumeMounts:
          # name must match the volume name below
          - name: nfs
            mountPath: "/usr/share/nginx/html"
        resources:
           limits:
             cpu: 50m
             memory: 50Mi
           requests:
             cpu: 10m
             memory: 30Mi
      volumes:
      - name: nfs
        persistentVolumeClaim:
          claimName: photoweb-nfs

---
apiVersion: v1
kind: Service
metadata:
  name: web-frontend-svc
  namespace: photoweb
  labels:
    k8s-app: web-frontend-svc
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: "web-frontend-svc"
spec:
  selector:
      k8s-app: photoweb-front
  ports:
  - name: web-frontend
    port: 80
    protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-frontend-ingress
  namespace: photoweb
spec:
  rules:
  - host: photoweb.home.fossar.net
    http:
      paths:
      - path: /
        backend:
          serviceName: web-frontend-svc
          servicePort: 80
