---
image:
  repository: ghcr.io/onedr0p/prowlarr-develop
  tag: 1.19.0.4568@sha256:59a1b3f3f5df0f0d112a338d8b155737736ae506aaf2f227fa8bdf54b1bd634d
  pullPolicy: IfNotPresent
exportarrImage:
  repository: ghcr.io/onedr0p/exportarr
  pullPolicy: IfNotPresent
  tag: v2.0.1@sha256:727e7bc8f2f0934a2117978c59f4476b954018b849a010ea6cfb380bd6539644

securityContext:
  container:
    readOnlyRootFilesystem: false

service:
  main:
    ports:
      main:
        port: 9696
  metrics:
    enabled: false

persistence:
  config:
    enabled: true
    type: hostPath
    hostPath: /mnt/tank/dls/configs/prowlarr
    targetSelector:
      main:
        main:
          mountPath: /config
      exportarr:
        exportarr:
          mountPath: /config
          readOnly: true

metrics:
  main:
    enabled: false

ingress:
  main:
    enabled: true
    hosts:
      - host: prowlarr.knas.home.fossar.net
        paths:
          - path: /
            pathType: Prefix
    integrations:
      certManager:
        certificateIssuer: google-dns-issuer-prod
        enabled: true
      traefik:
        allowCors: false
        enabled: true
        entrypoints:
          - websecure

global:
  traefik:
    fixedMiddlewares:
      - name: chain-basic
        namespace: ingress-controller


workload:
  main:
    podSpec:
      containers:
        main:
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
          probes:
            liveness:
              path: /ping
            readiness:
              path: /ping
            startup:
              type: tcp
          env:
            PROWLARR__PORT: "{{ .Values.service.main.ports.main.port }}"
            PROWLARR__AUTHENTICATION_METHOD: ""
  exportarr:
    enabled: true
    type: Deployment
    strategy: RollingUpdate
    replicas: 1
    podSpec:
      containers:
        exportarr:
          primary: true
          enabled: true
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
          imageSelector: exportarrImage
          args:
            - prowlarr
          probes:
            liveness:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
            readiness:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
            startup:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
          env:
            INTERFACE: 0.0.0.0
            PORT: "{{ .Values.service.metrics.ports.metrics.port }}"
            URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
            # additional metrics (slow)
            # ENABLE_ADDITIONAL_METRICS: false
            # enable gathering unknown queue items
            # ENABLE_UNKNOWN_QUEUE_ITEMS: false
            # enable backfill of historical metrics
            # PROWLARR__BACKFILL: false
            # Set a date from which to start the backfill
            # PROWLARR__BACKFILL_SINCE_DATE: 1970-01-01
            CONFIG: "/config/config.xml"
